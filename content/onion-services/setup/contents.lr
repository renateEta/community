section: onion services
---
section_id: onion-services
---
color: primary
---
image: cloud-upload-alt
---
_template: layout.html
---
title: Set up Your Onion Service
---
subtitle: Learn how to set up a .onion site of your very own.
---
key: 1
---
cta: Get Started
---
html: two-columns-page.html
---
body:

This guide shows you how to set up an onion service for your website. 

## Step 0: Get a working Tor

As part of this guide, we will assume you have a functional Tor in your machine. Tor should be up and running correctly for this guide to work. You should also know where Tor's configuration files are.

To setup Tor, Windows users can follow the [Windows howto](https://2019.www.torproject.org/docs/tor-doc-windows.html.en), OS X users should follow the [OS X howto](https://2019.www.torproject.org/docs/tor-doc-osx.html.en), and Linux/BSD/Unix users should follow the [Unix howto](https://2019.www.torproject.org/docs/tor-doc-unix.html.en).

## Step 1: Get a web server working

As a first step you should setup a web server locally, like nginx or lighttpd. Setting up a web server can be complex.
We're not going to cover how to set up a web server here. If you get stuck or want to do more, find a friend who can help you.
We recommend you install a new separate web server for your onion service.

You need to configure your web server so it doesn't give away any information about you, your computer, or your location.
This is not an easy task and in the end of this document we will offer more resources on how to make this possible.

Once your web server is set up, make sure it works: open your browser and go to http://localhost:8080/, where 8080 is the webserver port you chose during setup (you can choose any port, 8080 is just an example).
Then try putting a file in the main html directory, and make sure it shows up when you access the site.

## Step 2: Configure your Tor onion service

The next step is opening the config file of Tor (torrc) and doing the appropriate configurations to setup an onion service.
Depending on your operating system and setup, your Tor configuration file can be at a different location or look different.
You will need to put the following two lines in your torrc:

     HiddenServiceDir /var/lib/tor/hidden_service/
     HiddenServicePort 80 127.0.0.1:8080


The `HiddenServiceDir` line specifies the directory which should contain information and cryptographic keys for your onion service.
You will want to change the `HiddenServiceDir` line, so that it points to an actual directory that is readable/writeable by the user that will be running Tor.

The `HiddenServicePort` line specifies a _virtual port_ (that is, the port that people visiting your onion service will be using), and in the above case it says that any traffic incoming to port 80 of your onion service should be redirected to `127.0.0.1:8080` (which is where the web server from step 1 is listening).

## Step 3: Restart Tor and check that it worked

Now save your `torrc` and restart Tor.

If Tor starts up again, great. Otherwise, something is wrong. First look at your logfiles for hints.
It will print some warnings or error messages. That should give you an idea what went wrong.
Typically, there are typos in the torrc or wrong directory permissions (See the [logging FAQ](https://www.torproject.org/docs/faq#Logs) entry if you don't know how to enable or find your log file.)

When Tor starts, it will automatically create the `HiddenServiceDir` that you specified (if necessary). Make sure this is the case.

## Step 4: Test that your onion service works

Now to get your onion service address, go to your `HiddenServiceDir` directory, and find a file named `hostname`.
The `hostname` file in your hidden service configuration directory contains the hostname for your new onion v3 hidden service.
The other files are your hidden service keys, so it is imperative that these are kept private.
If your keys leak, other people can impersonate your onion service, deeming it compromised, useless, and dangerous to visit.

Now you can connect to your onion service using Tor Browser, and you should get the html page you setup back in step 1.
If it doesn't work, look in your logs for some hints, and keep playing with it until it works.

## Step 5: More advanced tips

If you plan to keep your service available for a long time, you might want to make a backup copy of the `private_key` file somewhere.

If you want to forward multiple virtual ports for a single onion service, just add more `HiddenServicePort` lines. If you want to run multiple onion services from the same Tor client, just add another `HiddenServiceDir` line. All the following HiddenServicePort lines refer to this HiddenServiceDir line, until you add another HiddenServiceDir line:

     HiddenServiceDir /usr/local/etc/tor/hidden_service/
     HiddenServicePort 80 127.0.0.1:8080

     HiddenServiceDir /usr/local/etc/tor/other_hidden_service/
     HiddenServicePort 6667 127.0.0.1:6667
     HiddenServicePort 22 127.0.0.1:22
    
To set up an onion service on Raspbian have a look at Alec Muffett's [Enterprise Onion Toolkit](https://github.com/alecmuffett/eotk).

**Client Authorization**

To set up Cookie Authentication for **v2** services see the entries for the [HidServAuth](https://2019.www.torproject.org/docs/tor-manual.html.en#HidServAuth) and [HiddenServiceAuthorizeClient](https://2019.www.torproject.org/docs/tor-manual.html.en#HiddenServiceAuthorizeClient) options in the manual. First add following line to the [torrc](https://2019.www.torproject.org/docs/faq.html.en#torrc) file of your onion service:

     HiddenServiceAuthorizeClient [auth-type] [service-name]
    
Restart/reload tor and read the cookie from the hostname file of your onion service, for example in
/var/lib/tor/hidden_service_path/hostname.
To access it with a tor client add following line to torrc and (re)start/reload it:

     HidServAuth [onion-address] [auth-cookie] [service-name]
    
You are now able to browse the onion service address.

To set up Client Authorization for **v3** (["next-gen"](https://2019.www.torproject.org/docs/tor-onion-service.html.en#four)) services as specified in [rend-spec-v3.txt](https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n615) for the tor service running the onion follow the instructions in [Client Authorization](https://2019.www.torproject.org/docs/tor-manual-dev.html.en#_client_authorization). Note that to revoke clients you need to restart the tor service (see [#28275](https://trac.torproject.org/projects/tor/ticket/28275)). At the moment you need to create the keys yourself with a script (like these written in [bash](https://gist.github.com/mtigas/9c2386adf65345be34045dace134140b) or [rust](https://github.com/haxxpop/torkeygen)).

To access it with a tor client make sure you have [ClientOnionAuthDir](https://2019.www.torproject.org/docs/tor-manual-dev.html.en#ClientOnionAuthDir) set in torrc. In the <ClientOnionAuthDir> directory, create an .auth_private file for the onion service corresponding to this key (i.e. 'bob_onion.auth_private').
The contents of the <ClientOnionAuthDir>/<user>.auth_private file should look like:

     <56-char-onion-addr-without-.onion-part>:descriptor:x25519:BBBEAUAO3PIFAH7SBGBI6A2QFAZBXG2NVN7HMBXFCZENJVF6C5AQ
    
Then (re)start/reload it and you should be able to browse the onion service address.

**Operational security**

Onion services operators need to practice proper [operational security](https://trac.torproject.org/projects/tor/wiki/doc/OperationalSecurity) and system administration to maintain security. For some security suggestions please make sure you read over Riseup's ["Tor Hidden (Onion) Services Best Practices" document](https://riseup.net/en/security/network-security/tor/onionservices-best-practices). Also, here are some more anonymity issues you should keep in mind:

 - As mentioned above, be careful of letting your web server reveal identifying information about you, your computer, or your location. For example, readers can probably determine whether it's thttpd or Apache, and learn something about your operating system.
 - If your computer isn't online all the time, your onion service won't be either. This leaks information to an observant adversary.
 - It is generally a better idea to host onion services on a Tor client rather than a Tor relay, since relay uptime and other properties are publicly visible.
 - The longer an onion service is online, the higher the risk that its location is discovered. The most prominent attacks are building a profile of the onion service's availability and matching induced traffic patterns.
Another common issue is whether to use HTTPS on your relay or not. Have a look at this post on the Tor Blog to learn more about these issues.

You can use [stem](https://stem.torproject.org/) to [automate the management of your onion services](https://stem.torproject.org/tutorials/over_the_river.html).

Finally, feel free to use the [[tor-onions] mailing list](https://lists.torproject.org/pipermail/tor-onions/) to discuss the secure administration and operation of Tor onion services.

Here are other resources to better configure and protect your onion service:

- Best practices for onion services
https://riseup.net/en/security/network-security/tor/onionservices-best-practices
- More advanced tips for onion services
https://2019.www.torproject.org/docs/tor-onion-service.html.en#three
- Advanced onion service security
https://blog.torproject.org/announcing-vanguards-add-onion-services